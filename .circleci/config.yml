# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.4.1-node-browsers
        environment:
          PGHOST: 127.0.0.1
          PGUSER: myapp-test
          RAILS_ENV: test
      # - image: circleci/postgres:9.5-alpine
      #   environment:
      #     POSTGRES_USER: root
      #     POSTGRES_DB: circle_test
      #     POSTGRES_PASSWORD: ""
      - image: mysql:5.6
        environment:
          - MYSQL_ROOT_HOST=%
          - MYSQL_ALLOW_EMPTY_PASSWORD=true
          - MYSQL_DATABASE=circle_test
      - image: selenium/standalone-firefox:3.1.0
      # - image: circleci/mysql
        # environment:
        #   MYSQL_ALLOW_EMPTY_PASSWORD: true
        #   MYSQL_DATABASE: circle_test
        #   MYSQL_HOST: 127.0.0.1
        #   MYSQL_ROOT_HOST: %
        #   MYSQL_USER: root
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run: mv config/database.ci.yml config/database.yml
      - run: bundle exec rake db:create
      - run: bundle exec rake db:migrate

      # run tests!
      - run:
          name: run rspec tests
          command: |
            mkdir /tmp/test-results

            bundle exec rspec spec

      - run:
          name: run cucumber tests
          command: cucumber

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
